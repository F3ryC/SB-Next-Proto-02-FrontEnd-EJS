<section class="page-header">
  <div class="container">
    <h1>Reset Password</h1>
    <p>Enter your email address to receive a password reset link</p>
  </div>
</section>

<section class="login-section">
  <div class="container">
    <div class="login-form-container">
      <!-- Step 1: Request Password Reset -->
      <form id="forgot-password-form" class="login-form">
        <div class="form-group">
          <label for="email">Email Address</label>
          <input type="email" id="email" name="email" class="form-control" required>
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-primary btn-full" id="submit-btn">
            <span class="btn-text">Send Reset Link</span>
            <span class="btn-loading" style="display: none;">
              <i class="fas fa-spinner fa-spin"></i> Sending...
            </span>
          </button>
        </div>
        
        <div class="form-footer">
          <p>Remember your password? <a href="/login">Sign in</a></p>
        </div>
      </form>

      <!-- Step 2: Reset Password (shown after receiving reset link) -->
      <form id="reset-password-form" class="login-form" style="display: none;">
        <div class="form-group">
          <label for="reset-code">Reset Code</label>
          <input type="text" id="reset-code" name="resetCode" class="form-control" required 
                 placeholder="Enter the code from your email">
          <small class="form-text">Check your email for the reset code</small>
        </div>
        
        <div class="form-group">
          <label for="new-password">New Password</label>
          <input type="password" id="new-password" name="newPassword" class="form-control" required 
                 minlength="6" placeholder="Enter your new password">
        </div>
        
        <div class="form-group">
          <label for="confirm-password">Confirm New Password</label>
          <input type="password" id="confirm-password" name="confirmPassword" class="form-control" required 
                 minlength="6" placeholder="Confirm your new password">
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-primary btn-full" id="reset-btn">
            <span class="btn-text">Reset Password</span>
            <span class="btn-loading" style="display: none;">
              <i class="fas fa-spinner fa-spin"></i> Resetting...
            </span>
          </button>
        </div>
        
        <div class="form-footer">
          <p>Didn't receive the email? <a href="#" id="resend-link">Resend</a></p>
          <p><a href="/login">Back to Sign In</a></p>
        </div>
      </form>
    </div>
  </div>
</section>

<script type="module">
  import { requestPasswordReset, resetPassword } from '/js/auth.js';
  import { showMessage, showSuccess, showError, clearMessages, showLoading, MESSAGE_TYPES } from '/js/messaging.js';

  // Utility functions for UI management
  function setLoading(button, isLoading) {
    const btnText = button.querySelector('.btn-text');
    const btnLoading = button.querySelector('.btn-loading');
    
    if (isLoading) {
      btnText.style.display = 'none';
      btnLoading.style.display = 'inline-block';
      button.disabled = true;
    } else {
      btnText.style.display = 'inline-block';
      btnLoading.style.display = 'none';
      button.disabled = false;
    }
  }

  function showResetForm() {
    document.getElementById('forgot-password-form').style.display = 'none';
    document.getElementById('reset-password-form').style.display = 'block';
  }

  function showForgotForm() {
    document.getElementById('forgot-password-form').style.display = 'block';
    document.getElementById('reset-password-form').style.display = 'none';
  }

  // Handle forgot password form submission
  document.getElementById('forgot-password-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const email = document.getElementById('email').value.trim();
    const submitBtn = document.getElementById('submit-btn');
    
    if (!email) {
      showError('Please enter your email address', '.login-form-container');
      return;
    }

    setLoading(submitBtn, true);
    clearMessages('.login-form-container');

    try {
      const result = await requestPasswordReset(email);
      
      if (result.error) {
        showError(result.error, '.login-form-container');
      } else {
        showSuccess(result.message, '.login-form-container');
        // Show the reset password form after a short delay
        setTimeout(() => {
          showResetForm();
        }, 2000);
      }
    } catch (error) {
      showError('An unexpected error occurred. Please try again.', '.login-form-container');
    } finally {
      setLoading(submitBtn, false);
    }
  });

  // Handle reset password form submission
  document.getElementById('reset-password-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const resetCode = document.getElementById('reset-code').value.trim();
    const newPassword = document.getElementById('new-password').value;
    const confirmPassword = document.getElementById('confirm-password').value;
    const resetBtn = document.getElementById('reset-btn');
    
    if (!resetCode || !newPassword || !confirmPassword) {
      showError('Please fill in all fields', '.login-form-container');
      return;
    }

    if (newPassword !== confirmPassword) {
      showError('Passwords do not match', '.login-form-container');
      return;
    }

    if (newPassword.length < 6) {
      showError('Password must be at least 6 characters long', '.login-form-container');
      return;
    }

    setLoading(resetBtn, true);
    clearMessages('.login-form-container');

    try {
      const result = await resetPassword(resetCode, newPassword);
      
      if (result.error) {
        showError(result.error, '.login-form-container');
      } else {
        showSuccess(result.message, '.login-form-container');
        // Redirect to login page after successful reset
        setTimeout(() => {
          window.location.href = '/login';
        }, 2000);
      }
    } catch (error) {
      showError('An unexpected error occurred. Please try again.', '.login-form-container');
    } finally {
      setLoading(resetBtn, false);
    }
  });

  // Handle resend link
  document.getElementById('resend-link').addEventListener('click', async (e) => {
    e.preventDefault();
    
    const email = document.getElementById('email').value.trim();
    if (!email) {
      showError('Please enter your email address first', '.login-form-container');
      return;
    }

    const resendLink = document.getElementById('resend-link');
    resendLink.textContent = 'Sending...';
    resendLink.style.pointerEvents = 'none';

    try {
      const result = await requestPasswordReset(email);
      
      if (result.error) {
        showError(result.error, '.login-form-container');
      } else {
        showSuccess('Reset link sent again!', '.login-form-container');
      }
    } catch (error) {
      showError('Failed to resend reset link. Please try again.', '.login-form-container');
    } finally {
      resendLink.textContent = 'Resend';
      resendLink.style.pointerEvents = 'auto';
    }
  });

  // Check for reset code in URL parameters (for email links)
  const urlParams = new URLSearchParams(window.location.search);
  const oobCode = urlParams.get('oobCode');
  
  if (oobCode) {
    document.getElementById('reset-code').value = oobCode;
    showResetForm();
  }
</script> 