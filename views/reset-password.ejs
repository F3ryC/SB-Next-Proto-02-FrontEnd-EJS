<section class="page-header">
  <div class="container">
    <h1>Reset Your Password</h1>
    <p>Enter your new password below</p>
  </div>
</section>

<section class="login-section">
  <div class="container">
    <div class="login-form-container">
      <!-- Reset Password Form -->
      <form id="reset-password-form" class="login-form">
        <div class="form-group">
          <label for="new-password">New Password</label>
          <input type="password" id="new-password" name="newPassword" class="form-control" required 
                 minlength="6" placeholder="Enter your new password">
          <small class="form-text">Password must be at least 6 characters long</small>
        </div>
        
        <div class="form-group">
          <label for="confirm-password">Confirm New Password</label>
          <input type="password" id="confirm-password" name="confirmPassword" class="form-control" required 
                 minlength="6" placeholder="Confirm your new password">
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-primary btn-full" id="reset-btn">
            <span class="btn-text">Reset Password</span>
            <span class="btn-loading" style="display: none;">
              <i class="fas fa-spinner fa-spin"></i> Resetting...
            </span>
          </button>
        </div>
        
        <div class="form-footer">
          <p><a href="/login">Back to Sign In</a></p>
        </div>
      </form>

      <!-- Success state -->
      <div id="success-state" class="text-center" style="display: none;">
        <i class="fas fa-check-circle fa-3x" style="color: #4CAF50; margin-bottom: 20px;"></i>
        <h3>Password Reset Successfully!</h3>
        <p>Your password has been updated. You can now sign in with your new password.</p>
        <div class="form-actions" style="margin-top: 30px;">
          <a href="/login" class="btn btn-primary">Sign In</a>
        </div>
      </div>
    </div>
  </div>
</section>

<script type="module">
  import { resetPassword } from '/js/auth.js';
  import { showSuccess, showError, clearMessages } from '/js/messaging.js';

  function setLoading(button, isLoading) {
    const btnText = button.querySelector('.btn-text');
    const btnLoading = button.querySelector('.btn-loading');
    
    if (isLoading) {
      btnText.style.display = 'none';
      btnLoading.style.display = 'inline-block';
      button.disabled = true;
    } else {
      btnText.style.display = 'inline-block';
      btnLoading.style.display = 'none';
      button.disabled = false;
    }
  }

  function showSuccess() {
    document.getElementById('reset-password-form').style.display = 'none';
    document.getElementById('success-state').style.display = 'block';
  }

  // Handle reset password form submission
  document.getElementById('reset-password-form').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const newPassword = document.getElementById('new-password').value;
    const confirmPassword = document.getElementById('confirm-password').value;
    const resetBtn = document.getElementById('reset-btn');
    
    // Get the reset code from URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const oobCode = urlParams.get('oobCode');
    
    if (!oobCode) {
      showError('Invalid reset link. Please request a new password reset.', '.login-form-container');
      return;
    }

    if (!newPassword || !confirmPassword) {
      showError('Please fill in all fields', '.login-form-container');
      return;
    }

    if (newPassword !== confirmPassword) {
      showError('Passwords do not match', '.login-form-container');
      return;
    }

    if (newPassword.length < 6) {
      showError('Password must be at least 6 characters long', '.login-form-container');
      return;
    }

    setLoading(resetBtn, true);
    clearMessages('.login-form-container');

    try {
      const result = await resetPassword(oobCode, newPassword);
      
      if (result.error) {
        showError(result.error, '.login-form-container');
      } else {
        showSuccess(result.message, '.login-form-container');
        // Show success state after a short delay
        setTimeout(() => {
          showSuccess();
        }, 2000);
      }
    } catch (error) {
      showError('An unexpected error occurred. Please try again.', '.login-form-container');
    } finally {
      setLoading(resetBtn, false);
    }
  });

  // Check if we have a valid reset code on page load
  document.addEventListener('DOMContentLoaded', () => {
    const urlParams = new URLSearchParams(window.location.search);
    const oobCode = urlParams.get('oobCode');
    
    if (!oobCode) {
      showError('Invalid reset link. Please request a new password reset.', '.login-form-container');
      document.getElementById('reset-password-form').style.display = 'none';
    }
  });
</script> 